spring.application.name=gestor-reservas

spring.datasource.url=jdbc:mysql://localhost:3306/gestion_alojamientos?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root12345
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Le decimos a Hibernate que no intente crear tablas (ya las tienes en MySQL)
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Si usas Flyway (opcional ahora que ya creaste manualmente):
spring.flyway.enabled=false


# Fuerza a escuchar en localhost y en el puerto 8080
server.address=127.0.0.1
server.port=8081

# Configuración de seguridad básica (opcional)borrar mas adelante
spring.security.user.name=admin
spring.security.user.password=admin123


# === Configuración SMTP === (DUDA)
# p.ej. smtp.gmail.com
spring.mail.host=smtp.gmail.com           
spring.mail.port=587   
# tu usuario SMTP        
spring.mail.username=joao-paulo.realista.ext@inetum.com       
spring.mail.password=        # tu contraseña SMTP
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



# === Parámetros del informe === (Duda)
report.email.from=notificaciones@tudominio.com
report.email.to=admin@tudominio.com,ops@tudominio.com

# === Opcional: cron parametrizable ===
# cada día a las 12:00
report.cron.expression=0 0 12 * * *     


# JWT
security.jwt.secret=TuSecretoMuyLargoYSeguro
# 1 hora
security.jwt.expirationMs=3600000   
# 24 horas
security.jwt.refreshExpirationMs=86400000  

# Endpoints de autenticación abiertos
security.public.paths=/api/auth/**,/webjars/**,/swagger-ui/**

# (Op) URL base API
server.servlet.context-path=/api
